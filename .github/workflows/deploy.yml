name: Deploy to Google Play

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: environment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check release branch
        if: ${{ !startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          echo "::error::This workflow can only be run on release branches (e.g., release/1.0.0)"
          exit 1
          
      - name: Get version from branch
        id: get_version
        run: echo "version=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_OUTPUT

      - name: Get latest version code
        id: get_version_code
        run: |
          # 建立 service account 檔案
          echo '${{ secrets.GCP_API_JSON_KEY }}' > service_account.json
          
          # 準備 JWT 所需資訊
          CLIENT_EMAIL=$(cat service_account.json | jq -r '.client_email')
          PRIVATE_KEY=$(cat service_account.json | jq -r '.private_key')
          
          echo "使用 client email: $CLIENT_EMAIL"
          
          # 建立 JWT 標頭和內容
          NOW=$(date +%s)
          EXPIRATION=$((NOW + 3600))
          
          JWT_HEADER='{"alg":"RS256","typ":"JWT"}'
          JWT_CLAIM="{\"iss\":\"$CLIENT_EMAIL\",\"scope\":\"https://www.googleapis.com/auth/androidpublisher\",\"aud\":\"https://oauth2.googleapis.com/token\",\"exp\":$EXPIRATION,\"iat\":$NOW}"
          
          # Base64 編碼 JWT 部分
          B64_HEADER=$(echo -n "$JWT_HEADER" | base64 -w 0 | tr '+/' '-_' | tr -d '=')
          B64_CLAIM=$(echo -n "$JWT_CLAIM" | base64 -w 0 | tr '+/' '-_' | tr -d '=')
          
          # 建立簽名
          UNSIGNED_JWT="$B64_HEADER.$B64_CLAIM"
          SIGNATURE=$(echo -n "$UNSIGNED_JWT" | openssl dgst -sha256 -sign <(echo -n "$PRIVATE_KEY") | base64 -w 0 | tr '+/' '-_' | tr -d '=')
          
          # 完整 JWT
          SIGNED_JWT="$UNSIGNED_JWT.$SIGNATURE"
          
          # 取得 access token
          TOKEN_RESPONSE=$(curl -s -X POST https://oauth2.googleapis.com/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=$SIGNED_JWT")
          
          echo "Token 回應: $TOKEN_RESPONSE"
          ACCESS_TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.access_token')
          
          if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" == "null" ]; then
            echo "::error::取得 access token 失敗，無法繼續流程"
            echo "錯誤詳情: $(echo "$TOKEN_RESPONSE" | jq -r '.error_description // .error')"
            exit 1
          fi
          
          # 建立編輯
          EDIT_RESPONSE=$(curl -s -X POST \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/${{ vars.PACKAGE_NAME }}/edits" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{}")
          
          echo "Edit 回應: $EDIT_RESPONSE"
          EDIT_ID=$(echo "$EDIT_RESPONSE" | jq -r '.id')
          
          if [ -z "$EDIT_ID" ] || [ "$EDIT_ID" == "null" ]; then
            echo "::error::無法建立編輯，無法繼續流程"
            echo "錯誤詳情: $(echo "$EDIT_RESPONSE" | jq -r '.error.message // "未知錯誤"')"
            exit 1
          fi
          
          # 取得 internal track 的最新版本
          TRACK_RESPONSE=$(curl -s -X GET \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/${{ vars.PACKAGE_NAME }}/edits/$EDIT_ID/tracks/internal" \
            -H "Authorization: Bearer $ACCESS_TOKEN")
          
          echo "Track 回應: $TRACK_RESPONSE"
          CURRENT_VERSION=$(echo "$TRACK_RESPONSE" | jq -r '.releases[0].versionCodes[0]')
          
          if [ -z "$CURRENT_VERSION" ] || [ "$CURRENT_VERSION" == "null" ]; then
            echo "::error::無法取得版本號，無法繼續流程"
            echo "錯誤詳情: $(echo "$TRACK_RESPONSE" | jq -r '.error.message // "未知錯誤"')"
            exit 1
          fi
          
          # 計算下一個版本號
          NEXT_VERSION=$((CURRENT_VERSION + 1))
          echo "目前版本: $CURRENT_VERSION, 下一版本: $NEXT_VERSION"
          echo "version_code=$NEXT_VERSION" >> $GITHUB_OUTPUT
          
          # 清理 edit
          curl -s -X DELETE \
            "https://androidpublisher.googleapis.com/androidpublisher/v3/applications/${{ vars.PACKAGE_NAME }}/edits/$EDIT_ID" \
            -H "Authorization: Bearer $ACCESS_TOKEN"
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          
      - name: Create secret.properties
        run: |
          echo "google.book.api.key=${{ secrets.GOOGLE_BOOK_API_KEY }}" > secret.properties
          
      - name: Create signing store file
        run: |
          echo "${{ secrets.SIGNING_STORE_FILE_BASE64 }}" | base64 -d > client/composeApp/signing_store.keystore
          
      - name: Build Android App Bundle
        run: |
          ./gradlew clean bundle${{ vars.FLAVOR_NAME }} \
            -Pversion.code=${{ steps.get_version_code.outputs.version_code }} \
            -Pversion.name=${{ steps.get_version.outputs.version }} \
            -Psigning.store.file=signing_store.keystore \
            -Psigning.store.password=${{ secrets.SIGNING_STORE_PASSWORD }} \
            -Psigning.key.alias=${{ secrets.SIGNING_KEY_ALIAS }} \
            -Psigning.key.password=${{ secrets.SIGNING_KEY_PASSWORD }}
            
      - name: Output release files
        id: output_release_files
        run: |
          FLAVOR_NAME_LOWER=$(echo "${{ vars.FLAVOR_NAME }}" | awk '{print tolower($0)}')
          RELEASE_FILE="client/composeApp/build/outputs/bundle/${FLAVOR_NAME_LOWER}/composeApp-${FLAVOR_NAME_LOWER}.aab"
          echo "release_file=$RELEASE_FILE" >> $GITHUB_OUTPUT

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GCP_API_JSON_KEY }}
          packageName: ${{ vars.PACKAGE_NAME }}
          releaseFiles: ${{ steps.output_release_files.outputs.release_file }}
          track: internal
          status: completed
          changesNotSentForReview: false
          inAppUpdatePriority: 0

