name: Deploy to Google Play

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - Staging
          - Production
      version_code:
        description: 'Version Code'
        required: true
        type: number
        default: '1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check release branch
        if: ${{ !startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          echo "::error::This workflow can only be run on release branches (e.g., release/1.0.0)"
          exit 1
          
      - name: Get version from branch
        id: get_version
        run: echo "version=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_OUTPUT
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          
      - name: Create secret.properties
        run: |
          echo "google.book.api.key=${{ secrets.GOOGLE_BOOK_API_KEY }}" > secret.properties
          
      - name: Create signing store file
        run: |
          echo "${{ github.event.inputs.environment == 'Staging' && secrets.SIGNING_STORE_FILE_BASE64_STAGING || secrets.SIGNING_STORE_FILE_BASE64_PRODUCTION }}" | base64 -d > client/composeApp/signing_store.keystore
          
      - name: Build Android App Bundle
        run: |
          ./gradlew clean bundle${{ github.event.inputs.environment == 'Staging' && 'Debug' || 'Release' }} \
            -Pversion.code=${{ github.event.inputs.version_code }} \
            -Pversion.name=${{ steps.get_version.outputs.version }} \
            -Psigning.store.file=signing_store.keystore \
            -Psigning.store.password=${{ github.event.inputs.environment == 'Staging' && secrets.SIGNING_STORE_PASSWORD_STAGING || secrets.SIGNING_STORE_PASSWORD_PRODUCTION }} \
            -Psigning.key.alias=${{ github.event.inputs.environment == 'Staging' && secrets.SIGNING_KEY_ALIAS_STAGING || secrets.SIGNING_KEY_ALIAS_PRODUCTION }} \
            -Psigning.key.password=${{ github.event.inputs.environment == 'Staging' && secrets.SIGNING_KEY_PASSWORD_STAGING || secrets.SIGNING_KEY_PASSWORD_PRODUCTION }}
            
      - name: Check AAB file exists
        run: |
          AAB_PATH="client/composeApp/build/outputs/bundle/${{ github.event.inputs.environment == 'Staging' && 'debug' || 'release' }}/composeApp-${{ github.event.inputs.environment == 'Staging' && 'debug' || 'release' }}.aab"
          if [ ! -f "$AAB_PATH" ]; then
            echo "::error::AAB file not found at $AAB_PATH"
            ls -la client/composeApp/build/outputs/bundle/
            exit 1
          fi
          echo "AAB file found at $AAB_PATH"
          ls -lh "$AAB_PATH"
            
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ github.event.inputs.environment == 'Staging' && secrets.GCP_API_JSON_KEY_STAGING || secrets.GCP_API_JSON_KEY_PRODUCTION }}
          packageName: ${{ github.event.inputs.environment == 'Staging' && 'io.kort.inbooks.debug' || 'io.kort.inbooks' }}
          releaseFiles: client/composeApp/build/outputs/bundle/${{ github.event.inputs.environment == 'Staging' && 'debug' || 'release' }}/composeApp-${{ github.event.inputs.environment == 'Staging' && 'debug' || 'release' }}.aab
          track: internal
          status: completed
          changesNotSentForReview: false
          inAppUpdatePriority: 0
        env:
          DEBUG: true

